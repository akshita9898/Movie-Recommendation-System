# -*- coding: utf-8 -*-
"""movie_recommendation_system

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LTA3V3XoiuV2Or7FKLWR3W0svuJu0qp5
"""

import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.metrics.pairwise import cosine_similarity

# Larger Movie Dataset
data = {
    'Movie': [
        'Avengers', 'Iron Man', 'Hulk', 'Captain America', 'Thor', 'Spider-Man',
        'Doctor Strange', 'Harry Potter', 'Fantastic Beasts', 'The Dark Knight',
        'Inception', 'Interstellar', 'The Matrix', 'The Lion King', 'Finding Nemo',
        'Frozen', 'Toy Story', 'Guardians of the Galaxy', 'Black Panther', 'Wonder Woman'
    ],
    'Tags': [
        'Superhero Action', 'Superhero Tech', 'Superhero Rage', 'Superhero Patriot', 'Superhero Mythology', 'Superhero Web',
        'Superhero Magic', 'Magic Wizard Fantasy', 'Magic Wizard Adventure', 'Superhero Dark Action',
        'Dream Sci-Fi Action', 'Space Sci-Fi Adventure', 'Sci-Fi Action Virtual', 'Animated Adventure Family', 'Animated Ocean Adventure',
        'Animated Ice Magic', 'Animated Toys Adventure', 'Superhero Space Action', 'Superhero African Culture', 'Superhero Woman Power'
    ]
}

df = pd.DataFrame(data)

# Convert tags to feature vectors
cv = CountVectorizer()
vectors = cv.fit_transform(df['Tags']).toarray()

# Calculate similarity
similarity = cosine_similarity(vectors)

# Improved Recommendation System
def recommend_movies_by_input():
    user_input = input("Enter a movie name or keyword (e.g., 'Harry Potter', 'Superhero', 'Magic', 'Animated'): ").lower()

    if user_input in df['Movie'].str.lower().values:
        index = df[df['Movie'].str.lower() == user_input].index[0]
        distances = list(enumerate(similarity[index]))
        movies_list = sorted(distances, reverse=True, key=lambda x: x[1])[1:4]

        print("\nMovies similar to your choice:")
        for i in movies_list:
            print(df.iloc[i[0]].Movie)

    else:
        matched_movies = df[df['Tags'].str.lower().str.contains(user_input)]
        if not matched_movies.empty:
            print("\nMovies matching your keyword:")
            for movie in matched_movies['Movie']:
                print(movie)
        else:
            print("\nNo movies found matching your input. Please try a different keyword or movie name.")

# Run the system
recommend_movies_by_input()